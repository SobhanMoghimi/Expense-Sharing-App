openapi: 3.0.3
info:
  title: Expense-Sharing-App
  version: 2.0.0
  description: Documentation of Market-Making-Bot
paths:
  /api/group/:
    get:
      operationId: group_retrieve
      summary: Get user groups
      tags:
      - Group
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupList'
          description: ''
    post:
      operationId: group_create
      summary: Create Group
      tags:
      - Group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateGroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateGroupRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/user/auth/token/refresh/:
    post:
      operationId: user_auth_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/user/friends/:
    get:
      operationId: user_friends_retrieve
      summary: Get Friends
      tags:
      - User
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Friends'
          description: ''
    post:
      operationId: user_friends_create
      summary: Add Friend
      tags:
      - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddFriendRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddFriendRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddFriendRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: ''
  /api/user/login/:
    post:
      operationId: user_login_create
      summary: request to login
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerLoginRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerLoginRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerLoginRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ''
  /api/user/logout/:
    post:
      operationId: user_logout_create
      description: it will revoke refresh token and log out user from panel
      summary: log out user
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RefreshToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RefreshToken'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: ''
  /api/user/register/:
    post:
      operationId: user_register_create
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegisterRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegisterRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegisterRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ''
components:
  schemas:
    AddFriendRequest:
      type: object
      properties:
        phone_number_or_email:
          type: string
      required:
      - phone_number_or_email
    CreateGroupRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
      required:
      - name
    CustomerLoginRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
      - email
      - password
    Friend:
      type: object
      properties:
        friend:
          $ref: '#/components/schemas/User'
        money_owed:
          type: integer
      required:
      - friend
      - money_owed
    Friends:
      type: object
      properties:
        friends:
          type: array
          items:
            $ref: '#/components/schemas/Friend'
      required:
      - friends
    Group:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        members:
          type: array
          items:
            $ref: '#/components/schemas/User'
        created_by:
          $ref: '#/components/schemas/User'
        name:
          type: string
          maxLength: 128
        description:
          type: string
          maxLength: 512
      required:
      - created_by
      - description
      - id
      - members
      - name
    GroupList:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/Group'
      required:
      - groups
    RefreshToken:
      type: object
      properties:
        refresh_token:
          type: string
      required:
      - refresh_token
    Response:
      type: object
      properties:
        message:
          type: string
        status_code:
          type: integer
      required:
      - message
      - status_code
    Token:
      type: object
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
        message:
          type: string
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        email:
          type: string
          format: email
          nullable: true
          maxLength: 80
        first_name:
          type: string
          maxLength: 128
        last_name:
          type: string
          maxLength: 128
        id:
          type: string
          format: uuid
          readOnly: true
      required:
      - first_name
      - id
      - last_name
    UserRegisterRequest:
      type: object
      properties:
        email:
          type: string
        phone_number:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        password:
          type: string
      required:
      - email
      - first_name
      - last_name
      - password
      - phone_number
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT